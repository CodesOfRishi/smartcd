#!/bin/zsh

# ███████╗███╗   ███╗ █████╗ ██████╗ ████████╗ ██████╗██████╗ 
# ██╔════╝████╗ ████║██╔══██╗██╔══██╗╚══██╔══╝██╔════╝██╔══██╗
# ███████╗██╔████╔██║███████║██████╔╝   ██║   ██║     ██║  ██║
# ╚════██║██║╚██╔╝██║██╔══██║██╔══██╗   ██║   ██║     ██║  ██║
# ███████║██║ ╚═╝ ██║██║  ██║██║  ██║   ██║   ╚██████╗██████╔╝
# ╚══════╝╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝    ╚═════╝╚═════╝ Rishi K. (https://github.com/CodesOfRishi)

# configure SMARTCD_DIR env
[[ -v SMARTCD_DIR && -d $SMARTCD_DIR ]] || export SMARTCD_DIR=$HOME/.config/.smartcd

if [[ ! -d $SMARTCD_DIR ]]; then mkdir -p $SMARTCD_DIR; fi
if [[ ! -f $SMARTCD_DIR/smartcd.log ]]; then; touch $SMARTCD_DIR/smartcd.log; fi

# configure REC_LISTING_CMD env
if [[ -v REC_LISTING_CMD ]]; then 
	export REC_LISTING_CMD
elif [[ `which exa` == *exa ]];then 
	export REC_LISTING_CMD="exa -TaF -I '.git' --icons --group-directories-first --git-ignore --colour=always"
elif [[ `which tree` == *tree ]]; then
	export REC_LISTING_CMD="tree -C"
else
	export REC_LISTING_CMD=""
fi

# generate log
generate_log() { 
	current_path=`pwd`
	echo $current_path > $SMARTCD_DIR/smartcd_tmp.log
	cat $SMARTCD_DIR/smartcd.log >> $SMARTCD_DIR/smartcd_tmp.log
	awk '!seen[$0]++' $SMARTCD_DIR/smartcd_tmp.log > $SMARTCD_DIR/smartcd.log # remove duplicates
	rm -f $SMARTCD_DIR/smartcd_tmp.log
	sed -i '21,$ d' $SMARTCD_DIR/smartcd.log # remove lines from line no. 21 to end. (keep only last 20 unique visited paths)
}

# feature
sub_dir_hop() {
	builtin cd $1 2> $SMARTCD_DIR/smartcd_error.log
	if [[ ! $? -eq 0 ]]; then # the directory is not in any of cdpath values
		fd -t d --min-depth=2 -i -H -F --max-results=1 --prune $1 > $SMARTCD_DIR/smartcd_fd.log
		no_of_paths=`wc -l $SMARTCD_DIR/smartcd_fd.log | cut -d' ' -f1` # check whether fd searched at least 1 path
		if [[ $no_of_paths -eq 0 ]]; then
			cat $SMARTCD_DIR/smartcd_error.log
		else
			if [[ $REC_LISTING_CMD == "" ]]; then
				selected_entry=($(fd -t d --min-depth=2 -i -H -F $1 | fzf))
			else
				selected_entry=($(fd -t d --min-depth=2 -i -H -F $1 | fzf --preview "$REC_LISTING_CMD {}"))
			fi

			if [[ $selected_entry != "" ]]; then
				builtin cd $selected_entry
				generate_log
			fi
		fi
	else
		generate_log
	fi
}

# feature
recent_visited_dirs() {
	if [[ ! -s $SMARTCD_DIR/smartcd.log ]]; then
		>&2 echo "No any visited directory in record !!"
	else
		if [[ $REC_LISTING_CMD == "" ]]; then
			selected_entry=($(cat $SMARTCD_DIR/smartcd.log | fzf))
		else 
			selected_entry=($(cat $SMARTCD_DIR/smartcd.log | fzf --preview "$REC_LISTING_CMD {}"))
		fi

		# since the selected entry is already from the log, use builtin cd
		[[ $selected_entry != "" ]] && builtin cd $selected_entry
	fi
}

cd() {
	if [[ $1 != '--' ]]; then
		sub_dir_hop $1
	else
		recent_visited_dirs
	fi
}
