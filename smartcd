#!/bin/zsh

# ███████╗███╗   ███╗ █████╗ ██████╗ ████████╗ ██████╗██████╗ 
# ██╔════╝████╗ ████║██╔══██╗██╔══██╗╚══██╔══╝██╔════╝██╔══██╗
# ███████╗██╔████╔██║███████║██████╔╝   ██║   ██║     ██║  ██║
# ╚════██║██║╚██╔╝██║██╔══██║██╔══██╗   ██║   ██║     ██║  ██║
# ███████║██║ ╚═╝ ██║██║  ██║██║  ██║   ██║   ╚██████╗██████╔╝
# ╚══════╝╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝    ╚═════╝╚═════╝ Rishi K. (https://github.com/CodesOfRishi)

# configure SMARTCD_DIR env
[[ -v SMARTCD_DIR && -d $SMARTCD_DIR ]] || export SMARTCD_DIR=$HOME/.config/.smartcd

if [[ ! -d $SMARTCD_DIR ]]; then mkdir -p $SMARTCD_DIR; fi
if [[ ! -f $SMARTCD_DIR/smartcd.log ]]; then; touch $SMARTCD_DIR/smartcd.log; fi

# generate log of last 20 visited paths.
generate_log() { 
	current_path=`pwd`
	echo $current_path > $SMARTCD_DIR/smartcd_tmp.log
	cat $SMARTCD_DIR/smartcd.log >> $SMARTCD_DIR/smartcd_tmp.log
	awk '!seen[$0]++' $SMARTCD_DIR/smartcd_tmp.log > $SMARTCD_DIR/smartcd.log # remove duplicates
	rm -f $SMARTCD_DIR/smartcd_tmp.log
	sed -i '21,$ d' $SMARTCD_DIR/smartcd.log # remove lines from line no. 21 to end.
}

cd() {
	if [[ $1 != '--' ]]; then
		builtin cd $1
		[[ $? -eq 0 ]] && generate_log
	else
		if [[ ! -s $SMARTCD_DIR/smartcd.log ]]; then
			>&2 echo "No any visited directory in record !!"
		else
			if [[ `which exa` == *exa ]]; then
				selected_entry=($(cat $SMARTCD_DIR/smartcd.log | fzf --preview 'exa -TaF -I ".git" --icons --group-directories-first --git-ignore --colour=always {}'))
			elif [[ `which tree` == *tree ]]; then
				selected_entry=($(cat $SMARTCD_DIR/smartcd.log | fzf --preview 'tree -C {}'))
			else 
				selected_entry=($(cat $SMARTCD_DIR/smartcd.log | fzf))
			fi

			# since the selected entry is already from the log, use builtin cd
			[[ $selected_entry != "" ]] && builtin cd $selected_entry
		fi
	fi
}
